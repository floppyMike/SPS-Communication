name: C/C++ CI

on: 
  push:
  pull_request:

jobs:
  build:
    name: ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, ubuntu-latest]

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        
      - name: Install libnodave
        if: startsWith(matrix.os, 'ubuntu-latest')
        shell: bash
        run: |
          sudo dpkg --add-architecture i386
          sudo apt update
          sudo apt install libc6:i386 libncurses5:i386 libstdc++6:i386
          
          wget https://sourceforge.net/projects/libnodave/files/libnodave/libnodave-0.8.5.1/libnodave-0.8.5.1.tar.gz
          tar -xvzf libnodave-0.8.5.1.tar.gz
          cd libnodave-0.8.5.1
          sudo make
          sudo make install
          
      - name: Build on windows
        if: startsWith(matrix.os, 'windows-latest')
        shell: bash
        run: | 
          mkdir build && cd build && cmake -A win32 .. && cd src
          "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Current\Bin\msbuild.exe" //p:Configuration=Release //p:Platform=x86 SPSCom.vcxproj

      - name: Build on ubuntu
        if: startsWith(matrix.os, 'ubuntu-latest')
        shell: bash
        run: | 
          mkdir build && cd build && cmake -A x86 -D CMAKE_CXX_COMPILER=g++-9 ..
          make
